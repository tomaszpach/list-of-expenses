{"version":3,"sources":["reducers/rootReducer.js","components/Header/Header.js","components/Inputs/Inputs.js","components/Table/Table.js","components/Summary/Summary.js","App.js","serviceWorker.js","index.js"],"names":["initState","title","eurPln","transactions","value","id","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","expense","filter","element","Header","_ref","react_default","a","createElement","Inputs","placeholder","e","target","this","setState","defineProperty","preventDefault","parseFloat","Date","now","props","addExpense","_this2","onSubmit","handleSubmit","pattern","required","name","onChange","updateInput","step","Component","connect","reducerState","dispatch","Table","onDelete","items","map","item","index","eur","toFixed","key","className","onClick","Summary","sum","forEach","App","_this","_this$props","components_Header_Header","components_Inputs_Inputs","components_Table_Table","deleteExpense","components_Summary_Summary","updateCurrency","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6a1ac6f.chunk.js","sourcesContent":["const initState = {\n    title: 'List of expenses',\n    eurPln: 4.382,\n    transactions: [\n        {\n            title: 'New book about Rust',\n            value: 100,\n            id: 1544882981030\n        },\n        {\n            title: 'Snacks for a football match',\n            value: 20,\n            id: 1544882981031\n        },\n        {\n            title: 'Bus ticket',\n            value: 2.55,\n            id: 1544882981032\n        }\n    ]\n};\n\nconst rootReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return {\n                ...state,\n                transactions: [...state.transactions, action.expense]\n            };\n\n        case 'DELETE_EXPENSE':\n            return {\n                ...state,\n                transactions: state.transactions.filter(element => element.id !== action.id)\n            };\n\n        case 'UPDATE_CURRENCY':\n            return {\n                ...state,\n                eurPln: 4.412\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;\n","import React from 'react';\n\nconst Header = ({title, eurPln}) => {\n    return (\n        <header>\n            <h2>{title}</h2>\n            <span>1EUR = {eurPln} PLN</span>\n        </header>\n    );\n};\n\nexport default Header;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nclass Inputs extends Component {\n    state = {\n        placeholder: 'Please type title (minimum 5 characters)',\n        title: '',\n        value: ''\n    };\n\n    updateInput(type, e) {\n        const value = e.target.value;\n        this.setState({\n            [type]: value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const expense = {\n            title: this.state.title,\n            value: parseFloat(this.state.value),\n            id: Date.now()\n        };\n\n        this.props.addExpense(expense);\n    }\n\n    render() {\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n                <label>\n                    <span>Title of transaction:</span>\n                    <input pattern=\".{5,50}\" title=\"Minimum 5 characters\" required type=\"text\" name=\"title\"\n                           placeholder={this.state.placeholder} onChange={(e) => this.updateInput('title', e)}/>\n                </label>\n                <label>\n                    <span>Amount (in PLN):</span>\n                    <input step=\".01\" type=\"number\" name=\"amount\" placeholder=\"up to 2 numbers after the decimal\"\n                           onChange={(e) => this.updateInput('value', e)}/>\n                </label>\n                <input type=\"submit\" value=\"Add\"/>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = (reducerState) => {\n    return {}\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addExpense: (expense) => {\n            dispatch({type: 'ADD_EXPENSE', expense: expense})\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Inputs);\n","import React from 'react';\n\nconst Table = ({transactions, eurPln, onDelete}) => {\n    const items = transactions.map((item, index) => {\n        const title = item.title,\n            value = item.value,\n            eur = (item.value / eurPln).toFixed(2),\n            id = item.id;\n\n        return (\n            <tr key={index}>\n                <td>{title}</td>\n                <td>{value}</td>\n                <td>{eur}</td>\n                <td className=\"delete\" onClick={() => onDelete(id)}>Delete</td>\n            </tr>\n        );\n    });\n    return (\n        <table>\n            <tbody>\n            <tr>\n                <th>Title</th>\n                <th>Amount(PLN)</th>\n                <th>Amount(EUR)</th>\n                <th>Options</th>\n            </tr>\n            {items}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Table;\n","import React from 'react';\n\nconst Summary = ({transactions, eurPln}) => {\n    let sum = 0;\n    transactions.forEach(item => {\n        return sum = sum + item.value;\n    });\n\n    const eur = (sum / eurPln).toFixed(2);\n    return (\n        <div>Sum: {sum} PLN ({eur} EUR)</div>\n    );\n};\n\nexport default Summary;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport Header from './components/Header/Header';\nimport Inputs from './components/Inputs/Inputs';\nimport Table from './components/Table/Table';\nimport Summary from './components/Summary/Summary';\n\nimport './App.css';\n\n// todo przygotuj opcje zmiany wartosci EURO\n\nclass App extends Component {\n    render() {\n        const {title, eurPln, transactions} = this.props;\n        return (\n            <div className=\"App\">\n                <Header title={title} eurPln={eurPln} />\n                <Inputs />\n                <Table onDelete={(id) => this.props.deleteExpense(id)} transactions={transactions} eurPln={eurPln}/>\n                <Summary transactions={transactions} eurPln={eurPln}/>\n                <button onClick={() => this.props.updateCurrency()}>change conversion to 4.412</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (reducerState) => {\n    return {\n        title: reducerState.title,\n        eurPln: reducerState.eurPln,\n        transactions: reducerState.transactions\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteExpense: (id) => {\n            dispatch({type: 'DELETE_EXPENSE', id: id})\n        },\n        updateCurrency: (value) => {\n            dispatch({type: 'UPDATE_CURRENCY', value: value})\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\nimport rootReducer from './reducers/rootReducer';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}