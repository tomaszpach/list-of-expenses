{"version":3,"sources":["reducers/rootReducer.js","components/Header/Header.js","_partials/_input.js","_partials/_inputBtn.js","components/Inputs/Inputs.js","components/Table/Table.js","components/Summary/Summary.js","components/Conversion/Conversion.js","App.js","serviceWorker.js","index.js"],"names":["initState","title","eurPln","transactions","rootReducer","state","arguments","length","undefined","action","type","Object","objectSpread","toConsumableArray","concat","expense","filter","element","id","Header","_ref","react_default","a","createElement","Input","value","pattern","refe","step","inputTitle","name","placeholder","autoFocus","onChange","className","ref","e","required","InputBtn","Inputs","target","this","setState","defineProperty","preventDefault","parseFloat","Date","now","props","addExpense","nameInput","focus","_this2","onSubmit","handleSubmit","_input","updateInput","input","_inputBtn","Component","connect","dispatch","Table","onDelete","items","map","item","index","toFixed","eur","key","onClick","Summary","sum","forEach","Conversion","conversion","App","updateCurrency","_this$props","components_Header_Header","components_Inputs_Inputs","components_Table_Table","deleteExpense","components_Summary_Summary","components_Conversion_Conversion","reducerState","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad1f326f.chunk.js","sourcesContent":["const initState = {\r\n    title: 'List of expenses',\r\n    eurPln: 4.382,\r\n    transactions: []\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.expense]\r\n            };\r\n\r\n        case 'DELETE_EXPENSE':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(element => element.id !== action.id)\r\n            };\r\n\r\n        case 'UPDATE_CURRENCY':\r\n            return {\r\n                ...state,\r\n                eurPln: action.eurPln\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\n\r\nconst Header = ({title, eurPln}) => {\r\n    return (\r\n        <header>\r\n            <h2>{title}</h2>\r\n            <span>1EUR = {eurPln} PLN</span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Input = ({title, value, pattern, refe, step, inputTitle, type, name, placeholder, autoFocus, onChange}) => {\r\n    return (\r\n        <label>\r\n            <span>{title}</span>\r\n            <input className=\"default\"\r\n                   value={value}\r\n                   ref={refe}\r\n                   pattern={pattern}\r\n                   step={step}\r\n                   title={inputTitle}\r\n                   type={type}\r\n                   name={name}\r\n                   placeholder={placeholder}\r\n                   onChange={(e) => onChange(e)}\r\n                   autoFocus={autoFocus}\r\n                   required\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst InputBtn = ({value}) => {\r\n    return (\r\n        <input\r\n            value={value}\r\n            className=\"btn\"\r\n            type=\"submit\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default InputBtn;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Input from '../../_partials/_input';\r\nimport InputBtn from \"../../_partials/_inputBtn\";\r\n\r\nclass Inputs extends Component {\r\n    state = {\r\n        title: '',\r\n        value: ''\r\n    };\r\n\r\n    updateInput(type, e) {\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [type]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const expense = {\r\n            title: this.state.title,\r\n            value: parseFloat(this.state.value),\r\n            id: Date.now()\r\n        };\r\n\r\n        this.props.addExpense(expense);\r\n        this.setState({\r\n            title: '',\r\n            value: ''\r\n        });\r\n        this.nameInput.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(e) => this.handleSubmit(e)}>\r\n                <Input title=\"Title of transaction:\"\r\n                       value={this.state.title}\r\n                       pattern=\".{5,50}\"\r\n                       inputTitle=\"Minimum 5 characters\"\r\n                       type=\"text\" name=\"title\"\r\n                       placeholder=\"Minimum 5 characters\"\r\n                       onChange={(e) => this.updateInput('title', e)}\r\n                       refe={(input) => {\r\n                           this.nameInput = input\r\n                       }}\r\n                       autoFocus\r\n                />\r\n\r\n                <Input title=\"Amount (in PLN):\"\r\n                       value={this.state.value}\r\n                       step=\".01\"\r\n                       inputTitle=\"Up to 2 numbers after the decimal\"\r\n                       type=\"number\"\r\n                       name=\"amount\"\r\n                       placeholder=\"Example: 73.12\"\r\n                       onChange={(e) => this.updateInput('value', e)}/>\r\n\r\n                <InputBtn value=\"add expense\"/>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addExpense: (expense) => {\r\n            dispatch({type: 'ADD_EXPENSE', expense: expense})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Inputs);\r\n","import React from 'react';\r\n\r\nconst Table = ({transactions, eurPln, onDelete}) => {\r\n    const items = transactions.map((item, index) => {\r\n        const title = item.title,\r\n            value = (item.value).toFixed(2),\r\n            eur = (item.value / eurPln).toFixed(2),\r\n            id = item.id;\r\n\r\n        return (\r\n            <tr key={index}>\r\n                <td>{title}</td>\r\n                <td>{value}</td>\r\n                <td>{eur}</td>\r\n                <td className=\"delete\" onClick={() => onDelete(id)}>Delete</td>\r\n            </tr>\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"expenses\">\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Title</th>\r\n                    <th>Amount(PLN)</th>\r\n                    <th>Amount(EUR)</th>\r\n                    <th>Options</th>\r\n                </tr>\r\n                {items}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Summary = ({transactions, eurPln}) => {\r\n    let sum = 0;\r\n    transactions.forEach(item => {\r\n        return sum = sum + item.value;\r\n    });\r\n\r\n    const eur = (sum / eurPln).toFixed(2);\r\n    return (\r\n        <h2 className=\"summary\">Sum: {sum.toFixed(2)} PLN ({eur} EUR)</h2>\r\n    );\r\n};\r\n\r\nexport default Summary;\r\n","import React from 'react';\r\nimport Input from \"../../_partials/_input\";\r\nimport InputBtn from \"../../_partials/_inputBtn\";\r\n\r\nconst Conversion = ({conversion, onSubmit, onChange}) => {\r\n    return (\r\n        <form className=\"conversion\" onSubmit={(e) => onSubmit(e)}>\r\n            <Input title=\"Type new conversion:\"\r\n                   step=\".001\"\r\n                   required\r\n                   type=\"number\"\r\n                   name=\"conversion\"\r\n                   placeholder=\"Example: 4.382\"\r\n                   onChange={(e) => onChange(e)}/>\r\n\r\n            <InputBtn value=\"Change conversion\"/>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Conversion;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from './components/Header/Header';\r\nimport Inputs from './components/Inputs/Inputs';\r\nimport Table from './components/Table/Table';\r\nimport Summary from './components/Summary/Summary';\r\nimport Conversion from './components/Conversion/Conversion';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        conversion: ''\r\n    };\r\n\r\n    updateInput(e) {\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n            conversion: value\r\n        })\r\n    }\r\n\r\n    updateCurrency(e) {\r\n        e.preventDefault();\r\n        this.props.updateCurrency(this.state.conversion)\r\n    }\r\n\r\n    render() {\r\n        const {title, eurPln, transactions} = this.props;\r\n        return (\r\n            <div className=\"App\">\r\n                <Header title={title} eurPln={eurPln}/>\r\n                <Inputs/>\r\n                <Table onDelete={(id) => this.props.deleteExpense(id)} transactions={transactions} eurPln={eurPln}/>\r\n\r\n                {transactions.length > 0 ?\r\n                    <Summary transactions={transactions} eurPln={eurPln}/> :\r\n                    <h2>Add some expenses to see summary</h2>\r\n                }\r\n\r\n                <Conversion onChange={(e) => this.updateInput(e)} onSubmit={(ref) => this.updateCurrency(ref)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (reducerState) => {\r\n    return {\r\n        title: reducerState.title,\r\n        eurPln: reducerState.eurPln,\r\n        transactions: reducerState.transactions\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteExpense: (id) => {\r\n            dispatch({type: 'DELETE_EXPENSE', id: id})\r\n        },\r\n        updateCurrency: (eurPln) => {\r\n            dispatch({type: 'UPDATE_CURRENCY', eurPln: eurPln})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}